 {
    _events: [Object: null prototype] {
      finish: [ [Function: bound resOnFinish], [Function: onevent] ],
      end: [Function: onevent]
    },
    _eventsCount: 2,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    _closed: false,
    socket: <ref *1> Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: [],
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        constructed: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        errorEmitted: false,
        emitClose: false,
        autoDestroy: true,
        destroyed: false,
        errored: null,
        closed: false,
        closeEmitted: false,
        defaultEncoding: 'utf8',
        awaitDrainWriters: null,
        multiAwaitDrain: false,
        readingMore: false,
        dataEmitted: false,
        decoder: null,
        encoding: null,
        [Symbol(kPaused)]: false
      },
      _events: [Object: null prototype] {
        end: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Array],
        close: [Array],
        drain: [Function: bound socketOnDrain],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause]
      },
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        afterWriteTickInfo: null,
        buffered: [],
        bufferedIndex: 0,
        allBuffers: true,
        allNoop: true,
        pendingcb: 0,
        constructed: true,
        prefinished: false,
        errorEmitted: false,
        emitClose: false,
        autoDestroy: true,
        errored: null,
        closed: false,
        closeEmitted: false,
        [Symbol(kOnFinished)]: []
      },
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: Server {
        maxHeaderSize: undefined,
        insecureHTTPParser: undefined,
        _events: [Object: null prototype],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 0,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        maxRequestsPerSocket: 0,
        headersTimeout: 60000,
        requestTimeout: 0,
        _connectionKey: '6::::4000',
        [Symbol(IncomingMessage)]: [Function: IncomingMessage],
        [Symbol(ServerResponse)]: [Function: ServerResponse],
        [Symbol(kCapture)]: false,
        [Symbol(async_id_symbol)]: 23
      },
      _server: Server {
        maxHeaderSize: undefined,
        insecureHTTPParser: undefined,
        _events: [Object: null prototype],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 0,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        maxRequestsPerSocket: 0,
        headersTimeout: 60000,
        requestTimeout: 0,
        _connectionKey: '6::::4000',
        [Symbol(IncomingMessage)]: [Function: IncomingMessage],
        [Symbol(ServerResponse)]: [Function: ServerResponse],
        [Symbol(kCapture)]: false,
        [Symbol(async_id_symbol)]: 23
      },
      parser: HTTPParser {
        '0': [Function: bound setRequestTimeout],
        '1': [Function: parserOnHeaders],
        '2': [Function: parserOnHeadersComplete],
        '3': [Function: parserOnBody],
        '4': [Function: parserOnMessageComplete],
        '5': [Function: bound onParserExecute],
        '6': [Function: bound onParserTimeout],
        _headers: [],
        _url: '',
        socket: [Circular *1],
        incoming: [IncomingMessage],
        outgoing: null,
        maxHeaderPairs: 2000,
        _consumed: true,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
      },
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [Circular *2],
      _peername: { address: '::ffff:127.0.0.1', family: 'IPv6', port: 54656 },
      timeout: 0,
      [Symbol(async_id_symbol)]: 493,
      [Symbol(kHandle)]: TCP {
        reading: true,
        onconnection: null,
        _consumed: true,
        [Symbol(owner_symbol)]: [Circular *1]
      },
      [Symbol(kSetNoDelay)]: false,
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: -1,
        _idlePrev: null,
        _idleNext: null,
        _idleStart: 47039,
        _onTimeout: null,
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: true,
        [Symbol(refed)]: false,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 501,
        [Symbol(triggerId)]: 498
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(RequestTimeout)]: undefined
    },
    _header: null,
    _keepAliveTimeout: 5000,
    _onPendingData: [Function: bound updateOutgoingData],
    req: IncomingMessage {
      _readableState: ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: [],
        flowing: true,
        ended: true,
        endEmitted: true,
        reading: false,
        constructed: true,
        sync: false,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        errorEmitted: false,
        emitClose: true,
        autoDestroy: true,
        destroyed: true,
        errored: null,
        closed: true,
        closeEmitted: true,
        defaultEncoding: 'utf8',
        awaitDrainWriters: null,
        multiAwaitDrain: false,
        readingMore: false,
        dataEmitted: true,
        decoder: null,
        encoding: null,
        [Symbol(kPaused)]: false
      },
      _events: [Object: null prototype] { end: [Function: clearRequestTimeout] },
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: <ref *1> Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        _events: [Object: null prototype],
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: [WritableState],
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server],
        _server: [Server],
        parser: [HTTPParser],
        on: [Function: socketListenerWrap],
        addListener: [Function: socketListenerWrap],
        prependListener: [Function: socketListenerWrap],
        setEncoding: [Function: socketSetEncoding],
        _paused: false,
        _httpMessage: [Circular *2],
        _peername: [Object],
        timeout: 0,
        [Symbol(async_id_symbol)]: 493,
        [Symbol(kHandle)]: [TCP],
        [Symbol(kSetNoDelay)]: false,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: Timeout {
          _idleTimeout: -1,
          _idlePrev: null,
          _idleNext: null,
          _idleStart: 47039,
          _onTimeout: null,
          _timerArgs: undefined,
          _repeat: null,
          _destroyed: true,
          [Symbol(refed)]: false,
          [Symbol(kHasPrimitive)]: false,
          [Symbol(asyncId)]: 501,
          [Symbol(triggerId)]: 498
        },
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(kCapture)]: false,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(RequestTimeout)]: undefined
      },
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      rawHeaders: [
        'Host',
        '127.0.0.1:4000',
        'Connection',
        'keep-alive',
        'Content-Length',
        '50',
        'Pragma',
        'no-cache',
        'Cache-Control',
        'no-cache',
        'sec-ch-ua',
        '"Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"',
        'Accept',
        'application/json, text/plain, */*',
        'Content-Type',
        'application/json',
        'sec-ch-ua-mobile',
        '?1',
        'User-Agent',
        'Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Mobile Safari/537.36',
        'sec-ch-ua-platform',
        '"Android"',
        'Origin',
        'http://localhost:4000',
        'Sec-Fetch-Site',
        'cross-site',
        'Sec-Fetch-Mode',
        'cors',
        'Sec-Fetch-Dest',
        'empty',
        'Accept-Encoding',
        'gzip, deflate, br',
        'Accept-Language',
        'en-US,en;q=0.9'
      ],
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/login',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: <ref *1> Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        _events: [Object: null prototype],
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: [WritableState],
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server],
        _server: [Server],
        parser: [HTTPParser],
        on: [Function: socketListenerWrap],
        addListener: [Function: socketListenerWrap],
        prependListener: [Function: socketListenerWrap],
        setEncoding: [Function: socketSetEncoding],
        _paused: false,
        _httpMessage: [Circular *2],
        _peername: [Object],
        timeout: 0,
        [Symbol(async_id_symbol)]: 493,
        [Symbol(kHandle)]: [TCP],
        [Symbol(kSetNoDelay)]: false,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: Timeout {
          _idleTimeout: -1,
          _idlePrev: null,
          _idleNext: null,
          _idleStart: 47039,
          _onTimeout: null,
          _timerArgs: undefined,
          _repeat: null,
          _destroyed: true,
          [Symbol(refed)]: false,
          [Symbol(kHasPrimitive)]: false,
          [Symbol(asyncId)]: 501,
          [Symbol(triggerId)]: 498
        },
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(kCapture)]: false,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(RequestTimeout)]: undefined
      },
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '/api/v1/users',
      originalUrl: '/api/v1/users/login',
      _parsedUrl: Url {
        protocol: null,
        slashes: null,
        auth: null,
        host: null,
        port: null,
        hostname: null,
        hash: null,
        search: null,
        query: null,
        pathname: '/login',
        path: '/login',
        href: '/login',
        _raw: '/login'
      },
      params: {},
      query: {},
      res: [Circular *2],
      _startAt: [ 274615, 486305400 ],
      _startTime: 2022-08-26T15:08:54.827Z,
      _remoteAddress: '::ffff:127.0.0.1',
      rateLimit: {
        limit: 100,
        current: 2,
        remaining: 98,
        resetTime: 2022-08-26T16:08:08.580Z
      },
      body: { email: 'USER1@google.com', password: 'pass1234' },
      _body: true,
      length: undefined,
      secret: undefined,
      cookies: [Object: null prototype] {},
      signedCookies: [Object: null prototype] {},
      queryPolluted: {},
      requestTime: '2022-08-26T15:08:54.846Z',
      route: Route { path: '/login', stack: [Array], methods: [Object] },
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: {
        host: '127.0.0.1:4000',
        connection: 'keep-alive',
        'content-length': '50',
        pragma: 'no-cache',
        'cache-control': 'no-cache',
        'sec-ch-ua': '"Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"',
        accept: 'application/json, text/plain, */*',
        'content-type': 'application/json',
        'sec-ch-ua-mobile': '?1',
        'user-agent': 'Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Mobile Safari/537.36',
        'sec-ch-ua-platform': '"Android"',
        origin: 'http://localhost:4000',
        'sec-fetch-site': 'cross-site',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'en-US,en;q=0.9'
      },
      [Symbol(kHeadersCount)]: 34,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0,
      [Symbol(RequestTimeout)]: undefined
    },
    _sent100: false,
    _expect_continue: false,
    locals: [Object: null prototype] {},
    _startAt: undefined,
    _startTime: undefined,
    writeHead: [Function: writeHead],
    __onFinished: [Function: listener] { queue: [ [Function: logRequest] ] },
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'content-security-policy': [
        'Content-Security-Policy',
        "script-src 'self' cdnjs.cloudflare.com"
      ],
      'cross-origin-embedder-policy': [ 'Cross-Origin-Embedder-Policy', 'require-corp' ],
      'cross-origin-opener-policy': [ 'Cross-Origin-Opener-Policy', 'same-origin' ],
      'cross-origin-resource-policy': [ 'Cross-Origin-Resource-Policy', 'same-origin' ],
      'x-dns-prefetch-control': [ 'X-DNS-Prefetch-Control', 'off' ],
      'expect-ct': [ 'Expect-CT', 'max-age=0' ],
      'x-frame-options': [ 'X-Frame-Options', 'SAMEORIGIN' ],
      'strict-transport-security': [
        'Strict-Transport-Security',
        'max-age=15552000; includeSubDomains'
      ],
      'x-download-options': [ 'X-Download-Options', 'noopen' ],
      'x-content-type-options': [ 'X-Content-Type-Options', 'nosniff' ],
      'origin-agent-cluster': [ 'Origin-Agent-Cluster', '?1' ],
      'x-permitted-cross-domain-policies': [ 'X-Permitted-Cross-Domain-Policies', 'none' ],
      'referrer-policy': [ 'Referrer-Policy', 'no-referrer' ],
      'x-xss-protection': [ 'X-XSS-Protection', '0' ],
      'access-control-allow-credentials': [ 'Access-Control-Allow-Credentials', 'true' ],
      'access-control-allow-origin': [ 'Access-Control-Allow-Origin', 'http://localhost:4000' ],
      'access-control-allow-methods': [
        'Access-Control-Allow-Methods',
        'GET, POST, OPTIONS, PUT, DELETE'
      ],
      'access-control-allow-headers': [
        'Access-Control-Allow-Headers',
        'Origin, X-Requested-With, Content-Type, Accept'
      ],
      'x-ratelimit-limit': [ 'X-RateLimit-Limit', 100 ],
      'x-ratelimit-remaining': [ 'X-RateLimit-Remaining', 98 ],
      date: [ 'Date', 'Fri, 26 Aug 2022 15:08:54 GMT' ],
      'x-ratelimit-reset': [ 'X-RateLimit-Reset', 1661530089 ],
      'set-cookie': [
        'Set-Cookie',
        'jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYyZTNkZjFmZTQ3N2RkOTMwMGRlMWZiMSIsImlhdCI6MTY2MTUyNjUzNSwiZXhwIjoxNjYxOTU4NTM1fQ.ipRZ1VYw9lVA4kNqWMyRzmY0s2qBCc2D0hqmlmuZ2ns; Path=/; Expires=Wed, 31 Aug 2022 15:08:55 GMT; HttpOnly'
      ]
    }
  }